Execute (create event):
  let game = vimcastle#game#create()
  let eventgen = vimcastle#eventgen#create()
    \.text('text')
    \.explore('Continue')

Execute (event executes):
  let event = eventgen.invoke(game)

Then (result):
  AssertEqual ['text'], event.log
  AssertEqual [
  \  {'label': 'Continue', 'name': 'explore', 'key': 'c'},
  \  {'label': 'Inventory', 'name': 'inventory', 'key': 'i'},
  \  {'label': 'Character Sheet', 'name': 'character', 'key': 's'}
  \], event.actions.bindings

Execute (access inventory):
  let event = eventgen.invoke(game)
  call event.action('inventory', game)
  AssertEqual 'inventory', game.screen

Execute (access character sheet):
  call eventgen.invoke(game)
  call event.action('character', game)
  AssertEqual 'sheet', game.screen

Execute (given next event):
  let game.scene = vimcastle#scene#create()
  let nextevent = vimcastle#eventgen#create().text('Next!')
  call game.scene.events.named('next', nextevent)
  call game.clearlog()

Execute (go to next event):
  let event = vimcastle#eventgen#create().explore('Next...').next('next').invoke(game)
  call event.action('explore', game)
  AssertEqual ['Next!'], game.log

