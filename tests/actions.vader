Execute (setup actions):
  let actions = vimcastle#actions#create()

Then (key not found):
  Assert actions.getByKey('z') == 0, 'Key not found should return 0'

Execute (setup action):
  function! Vimcastle_test_action(state)
    let a:state.called = 1
  endfunction

Execute (add):
  call actions.add('x', 'Do it!', function('Vimcastle_test_action'))

Then (getByKey):
  AssertEqual 'Do it!', actions.getByKey('x').label, 'Key should return action'
  
Execute (invoke):
  let g:test_state = {}
  call actions.invokeByKey('x', g:test_state)

Then (called):
  Assert g:test_state.called, 'Should call function'

Execute (clear):
  call actions.clear()

Then (key not found):
  Assert actions.getByKey('x') == 0, 'Key not found should return 0'

Execute (addDefault):
  call actions.addDefault('...', function('Vimcastle_test_action'))

Execute (invokeDefault):
  let g:test_state = {}
  call actions.invokeDefault(g:test_state)

Then (invokeDefault):
  Assert g:test_state.called, 'Should call function'
