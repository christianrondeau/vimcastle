Execute (initialize):
  let storyname = 'main'
  let scenes = {}
  execute 'let scenenames = vimcastle#stories#' . storyname . '#index#scenes()'
  for scenename in scenenames
    let scenes[scenename] = vimcastle#scene#load(storyname, scenename)
  endfor

Execute (invoke all events):
  let state = vimcastle#state#create()
  let state.scene = vimcastle#scene#loadintro(storyname)
  call state.scene.enter.invoke(state)
  for scenename in keys(scenes)
    Log 'Scene: ' . scenename
    " EVENTS
    for event in scenes[scenename].events.items
      try
        call event.value.invoke(state)
      catch
        throw 'Scene "' . storyname . '/' . scenename . '" has an error: ' . v:exception
      endtry
    endfor
    " MONSTERS
    let f = 'vimcastle#stories#' . storyname . '#' . scenename . '#monsters#get'
    try
      let repo = {}
      execute 'let repo = ' . f . '()'
      for monstergen in repo.items
        let monster = monstergen.value.invoke()
        Log '  Monster: ' . monster.name.long . ' (lvl ' . monster.level . ')'
      endfor
    catch
      throw 'Scene "' . storyname . '/' . scenename . '" has an erroneous monsters: ' . v:exception
    endtry
  endfor
