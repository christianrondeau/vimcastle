Execute (initialize):
  let testutils = vimcastle#testutils#create()
  let storyname = 'main'
  let scenes = {}
  execute 'let scenenames = vimcastle#stories#' . storyname . '#index#scenes()'
  for scenename in scenenames
    let scenes[scenename] = vimcastle#scene#load(storyname, scenename)
  endfor

Execute (invoke all events):
  let state = vimcastle#state#create()
  let state.scene = vimcastle#scene#loadintro(storyname)
  call state.scene.enter.invoke(state)
  for scenename in keys(scenes)
    Log 'Scene: ' . scenename
    " EVENTS
    for event in scenes[scenename].events.items
      try
        call event.value.invoke(state)
      catch
        throw 'Scene "' . storyname . '/' . scenename . '" has an error: ' . v:exception
      endtry
    endfor
    " MONSTERS
    let f = 'vimcastle#stories#' . storyname . '#' . scenename . '#monsters#get'
    try
      let repo = {}
      execute 'let repo = ' . f . '()'
      for monstergen in repo.items
        let monster = monstergen.value.invoke()
        let tempstate = testutils.givenstate(storyname, monster.level)
        let stats = testutils.autofight(tempstate, monster)
        if(tempstate.player.health <= 0)
          throw 'Scene "' . storyname . '/' . scenename . '" has a monster that is too difficult: ' . monster.name.long
        endif
        let difficulty = 100 - (tempstate.player.health * 100 / tempstate.player.getstat('health', 1))
        let difficultyname = ''
        if(difficulty < 15)
          let difficultyname = 'EASY'
        elseif(difficulty < 30)
          let difficultyname = 'MEDIUM'
        elseif(difficulty < 50)
          let difficultyname = 'HARD'
        else
          let difficultyname = 'EXTREME'
        endif
        Log '  Monster: ' . monster.name.long . ' (lvl ' . monster.level . ') - combat: ' . len(stats.log) . ' turns, hp: ' . tempstate.player.health . '/' . tempstate.player.getstat('health', 1) . ' - Difficulty: ' . difficulty . '% (' . difficultyname . ')'
      endfor
    catch
      throw 'Scene "' . storyname . '/' . scenename . '" has an erroneous monsters: ' . v:exception
    endtry
  endfor
