Execute (test setup):
  let screen = { 'width': 30 }
  let state = vimcastle#state#create()
  let state.player = vimcastle#character#create({'long': 'Player', 'short': 'You'}, 100)
  call state.player.equip(vimcastle#equippablegen#weapon('.', 'Swooord', 5, 127).stat('def', 3).invoke())
  call state.player.equip(vimcastle#equippablegen#armor('.', 'Armooor', 4).invoke())
  let state.log = ['current scene text']
  call state.actions().addNoop('b',  'Back')

Execute (draw):
  call vimcastle#ui#inventory#draw(screen, state)

Expect (inventory screen):
  ---------- Inventory ---------
  
  * Weapon: <Swooord>
    * dmg: 5-127
    * def: 3
  * Armor: <Armooor>
    * def: 4
  
  b) Back

Execute (scene text is not modified):
  AssertEqual ['current scene text'], state.log

Execute (items):
  let state.player.items = [
  \  { 'label': 'Potion of BANG' }
  \]
  call vimcastle#ui#inventory#draw(screen, state)

Expect (inventory screen with items):
  ---------- Inventory ---------
  
  * Weapon: <Swooord>
    * dmg: 5-127
    * def: 3
  * Armor: <Armooor>
    * def: 4
  * Items
    * Potion of BANG

  b) Back
